package parciales.parcialturnoDtema1_14_10_2022;

public abstract class Curso {
    private int a単oCursada;
    private Alumno [] infoAlumnos;
    private int cantidadAlumnos;
    private int dimF;

    public Curso(int a単oCursada, int N) {
        this.a単oCursada = a単oCursada;
        this.cantidadAlumnos = 0;
        this.dimF = N;
        this.infoAlumnos = new Alumno [N];
        inicializarInfoAlumnos(N);
    }
    
    private void inicializarInfoAlumnos(int N){
        for (int i = 0; i< N; i++){
            this.infoAlumnos[i] = null;
        }
    }
    
    public boolean agregarAlumno(Alumno unAlumno){
        boolean aux =  false;
        if (this.cantidadAlumnos < this.dimF){
            this.infoAlumnos[this.cantidadAlumnos] = unAlumno;
            this.cantidadAlumnos ++;
            aux = true;
        }
        return aux;
    }
    
    public void incrementarAsistencia(int unDni){
        int i = 0;
        while ((i < this.cantidadAlumnos) && (this.infoAlumnos[i].getDni() != unDni))
            i++;
        if (i < this.cantidadAlumnos)
            this.infoAlumnos[i].incrementoAsistenciaAlumno();
    }
    
    public void incrementarAutoevaluaciones(int unDni){
        int i = 0;
        while ((i < this.cantidadAlumnos) && (this.infoAlumnos[i].getDni() != unDni))
            i++;
        if (i < this.cantidadAlumnos)
            this.infoAlumnos[i].incrementoAutoevaluacionesAlumno();
    }
    
    public abstract boolean puedeRendir(Alumno unAlumno);
    
    public int getCantidadAlumnos() {
        return cantidadAlumnos;
    }
   
    public int cantidadAlumnosQuePuedenRendir(){
        int total = 0;
        for (int i = 0; i< this.cantidadAlumnos; i++){
            if (this.puedeRendir(this.infoAlumnos[i]))
                total++;
        }
        return total;
    }
}
