/* Nos piden una aplicación estilo Paint, para ello necesitamos representar figuras
geométricas (cuadrados, rectángulos, círculos, triángulos). Todas las figuras tienen color
de relleno y color de línea. Además, los triángulos guardan el valor de sus tres lados, los
cuadrados el valor de su lado, los círculos el valor del radio, y los rectángulos el valor de la
base y de la altura.
Las figuras deben incluir funcionalidad para: crearla a partir de los datos necesarios
(constructor), modificar/obtener el valor de los atributos (métodos get y set), calcular el
área y devolverla (método calcularArea), calcular el perimetro y devolverlo (método
calcularPerimetro), y mostrar la representación String de la figura (método toString)
concatenando toda la información.
A- Analice la jerarquía de figuras (carpeta tema4).
B- Incluya la clase Triángulo a la jerarquía de figuras. Triángulo debe heredar de Figura
todo lo que es común y definir su constructor y sus atributos y métodos propios. Además
debe redefinir el método toString.
C- De igual manera, incluya la clase Círculo a la jerarquía de figuras.
D- Añada a la representación String el valor del perímetro. Piense ¿qué método toString
debe modificar: el de cada subclase o el de Figura?
E- Añada el método despintar que establece los colores de la figura a línea “negra” y
relleno “blanco”. Piense ¿dónde debe definir el método: en cada subclase o en Figura?
F- Realizar un programa que instancie un triángulo y un círculo. Muestre en consola la
representación String de cada uno. Pruebe el funcionamiento del método despintar. */
package Práctica4;
import PaqueteLectura.Lector;
import MisClases.CirculoP4;
import MisClases.TrianguloP4;
public class Ejercicio1_4 {

    public static void main(String[] args) {
        // leemos info y cargamos el objeto triangulo
        System.out.println("Ingrese 3 lados de un triángulo: "); 
        double lado1 = Lector.leerDouble(); double lado2 = Lector.leerDouble(); double lado3 = Lector.leerDouble();
        System.out.println("Ingrese un color de relleno y un color de línea (de un triángulo): ");
        String colorRellenoTri = Lector.leerString(); String colorLineaTri = Lector.leerString(); 
        TrianguloP4 tri = new TrianguloP4(lado1, lado2, lado3, colorRellenoTri, colorLineaTri);
        // leemos info y cargamos el objeto circulo
        System.out.println("Ingrese el radio de un círculo: "); 
        double radio = Lector.leerDouble();
        System.out.println("Ingrese un color de relleno y un color de línea (de un círculo): ");
        String colorRellenoCir = Lector.leerString(); String colorLineaCir = Lector.leerString(); 
        CirculoP4 cir = new CirculoP4(radio, colorRellenoCir, colorLineaCir);
        
        System.out.println ("El triángulo tiene la siguiente representación: " + "\n" + tri.toString());
        System.out.println ("El círculo tiene la siguiente representación: " + "\n" + cir.toString());
        
        tri.despintar();
        cir.despintar();
        System.out.println ("Una vez despintado, el triángulo tiene la siguiente representación: " + tri.toString());
        System.out.println ("Una vez despintado, el círculo tiene la siguiente representación: " + cir.toString());        
    }
    
}
