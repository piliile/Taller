/* A- Queremos representar dibujos. Un dibujo guarda su título y las figuras
que lo componen (círculos, triángulos, cuadrados, rectángulos, etc). Piense,
con lo visto hasta ahora (no es necesario implementar):
i- ¿Dónde almacenará las figuras que componen el dibujo?. ¿Cuántas
estructuras se necesitarán?.
ii- ¿Cómo agregará las distintas figuras al dibujo?. ¿Cuántos métodos agregar
necesita implementar?
iii- ¿Qué problema surge a medida que aumentan las posibles figuras en la
jerarquía?
B- Implemente la clase Dibujo usando un array genérico de Figuras. Dicho array puede
guardar objetos creados a partir de cualquier subclase de Figura. Siga el molde mostrado. 
C- Analice y ejecute programa MainDibujos. Responda: ¿Qué imprime? ¿Por qué?
Piense: ¿qué ventaja tiene esta implementación a medida que aumentan las posibles
figuras en la jerarquía? ¿cuál es la ventaja del polimorfismo? ¿dónde se observa en
este ejercicio? 
 */
package Práctica4;
import SeDispone.CuadradoP4;
import SeDispone.RectanguloP4;
import MisClases.Dibujo;
public class Ejercicio5_4 {

    public static void main(String[] args) {
        Dibujo d = new Dibujo("Un dibujo");

        CuadradoP4 c1 = new CuadradoP4(10, "Violeta", "Rosa");
        RectanguloP4 r= new RectanguloP4(20 ,10 ,"Azul" , "Celeste");
        CuadradoP4 c2= new CuadradoP4(30, "Rojo", "Naranja");

        d.agregar (c1);
        d.agregar (r);
        d.agregar (c2);

        d.mostrar();

    }
}
